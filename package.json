{
  "name": "vscode-jq-playground",
  "displayName": "Visual Code jq playground",
  "description": "Visual Code integration with jq",
  "version": "3.2.6",
  "publisher": "davidnussio",
  "license": "SEE LICENSE IN LICENSE",
  "author": {
    "name": "David Nussio",
    "email": "david.nussio@gmail.com"
  },
  "icon": "images/icon.png",
  "galleryBanner": {
    "color": "#000000",
    "theme": "dark"
  },
  "bugs": {
    "url": "https://github.com/davidnussio/vscode-jq-playground/issues",
    "email": "david.nussio@gmail.com"
  },
  "homepage": "https://github.com/davidnussio/vscode-jq-playground/blob/master/README.md",
  "repository": {
    "type": "git",
    "url": "https://github.com/davidnussio/vscode-jq-playground.git"
  },
  "engines": {
    "vscode": "^1.46.0"
  },
  "categories": [
    "Other"
  ],
  "keywords": [
    "JSON",
    "query"
  ],
  "activationEvents": [
    "onLanguage:jqpg",
    "onLanguage:jq",
    "onCommand:extension.openExamples",
    "onCommand:extension.openManual",
    "onCommand:extension.openTutorial",
    "onCommand:extension.openPlay",
    "onCommand:extension.runQueryOutput",
    "onCommand:extension.runQueryEditor"
  ],
  "main": "./dist/extension",
  "contributes": {
    "configuration": {
      "title": "JQ playground configuration",
      "properties": {
        "jqPlayground.binaryPath": {
          "type": "string",
          "default": "",
          "description": "Specifies the folder path to jq binary. (/home/user/bin/jq). Leaves empty to automatically download from github.",
          "scope": "application"
        }
      }
    },
    "languages": [
      {
        "id": "jqpg",
        "extensions": [
          ".jqpg",
          ".jq"
        ],
        "configuration": "./language-configuration.json"
      }
    ],
    "grammars": [
      {
        "language": "jqpg",
        "scopeName": "source.jqpg",
        "path": "./syntaxes/jq.tmLanguage.json",
        "embeddedLanguages": {
          "source.jq": "jq",
          "source.json": "json"
        }
      }
    ],
    "commands": [
      {
        "command": "extension.openManual",
        "title": "Manual",
        "category": "jq playground"
      },
      {
        "command": "extension.openTutorial",
        "title": "Tutorial",
        "category": "jq playground"
      },
      {
        "command": "extension.openExamples",
        "title": "Examples",
        "category": "jq playground"
      },
      {
        "command": "extension.openPlay",
        "title": "Open online jqplay",
        "category": "jq playground"
      },
      {
        "command": "extension.runQueryOutput",
        "title": "Run query in output",
        "category": "jq playground"
      },
      {
        "command": "extension.runQueryEditor",
        "title": "Run query in editor",
        "category": "jq playground"
      }
    ],
    "keybindings": [
      {
        "command": "extension.runQueryOutput",
        "key": "ctrl+enter",
        "mac": "cmd+enter",
        "when": "editorTextFocus && editorLangId == 'jqpg'"
      },
      {
        "command": "extension.runQueryEditor",
        "key": "shift+enter",
        "mac": "shift+enter",
        "when": "editorTextFocus && editorLangId == 'jqpg'"
      }
    ]
  },
  "scripts": {
    "vscode:prepublish": "webpack --mode production",
    "webpack": "webpack --mode development",
    "webpack-dev": "webpack --mode development --watch",
    "generate:download": "node ./internals/download-manual.js",
    "generate:examples": "node ./internals/build-examples.js",
    "generate:autocomplete": "node ./internals/build-autocomplete.js",
    "generate:builtins": "jq -n 'builtins | sort | map(split(\"/\")[0]) | unique | map( { (.): {\"documentation\": \"\"} }) | add' > ./files/builtins.json",
    "generate:all": "rm -rf files/*; npm run generate:download && npm run generate:builtins && npm run generate:examples && npm run generate:autocomplete",
    "compile": "tsc -p ./",
    "lint": "eslint src --ext ts",
    "watch": "tsc -watch -p ./",
    "pretest": "npm run compile && npm run lint",
    "test": "node ./out/test/runTest.js",
    "test:watch": "jest --watch"
  },
  "devDependencies": {
    "@babel/core": "7.11.6",
    "@babel/preset-env": "7.11.5",
    "@babel/preset-typescript": "7.10.4",
    "@types/glob": "7.1.3",
    "@types/jest": "26.0.14",
    "@types/node": "14.11.1",
    "@types/ramda": "0.27.17",
    "@types/vscode": "1.46.0",
    "@typescript-eslint/eslint-plugin": "4.1.1",
    "@typescript-eslint/parser": "4.1.1",
    "babel-jest": "26.3.0",
    "clean-webpack-plugin": "^3.0.0",
    "eslint": "7.9.0",
    "eslint-config-prettier": "^6.11.0",
    "eslint-plugin-prettier": "3.1.4",
    "glob": "^7.1.6",
    "mocha": "8.1.3",
    "terser-webpack-plugin": "4.2.1",
    "ts-jest": "26.3.0",
    "ts-loader": "8.0.4",
    "typescript": "4.0.3",
    "vscode-test": "1.4.0",
    "webpack": "4.44.2",
    "webpack-cli": "3.3.12",
    "yaml": "1.10.0"
  },
  "dependencies": {
    "crocks": "^0.12.4",
    "eyes": "^0.1.8",
    "md5-file": "^5.0.0",
    "node-fetch": "2.6.1",
    "ramda": "0.27.1"
  },
  "extensionDependencies": [
    "jq-syntax-highlighting.jq-syntax-highlighting"
  ],
  "jest": {
    "modulePathIgnorePatterns": [
      "<rootDir>/src/test/"
    ]
  },
  "prettier": {
    "singleQuote": true,
    "semi": false,
    "printWidth": 80,
    "trailingComma": "all"
  }
}
